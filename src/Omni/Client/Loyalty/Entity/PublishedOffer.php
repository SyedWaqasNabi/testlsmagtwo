<?php
/**
 * THIS IS AN AUTOGENERATED FILE
 * DO NOT MODIFY
 */


namespace Ls\Omni\Client\Loyalty\Entity;

use \Ls\Omni\Client\Loyalty\Entity\Enum\OfferCode;
use \Ls\Omni\Exception\InvalidEnumException;
use \Ls\Omni\Client\Loyalty\Entity\Enum\OfferType;

class PublishedOffer
{

    /**
     * @property OfferCode $Code
     */
    protected $Code = null;

    /**
     * @property string $Description
     */
    protected $Description = null;

    /**
     * @property string $Details
     */
    protected $Details = null;

    /**
     * @property string $ExpirationDate
     */
    protected $ExpirationDate = null;

    /**
     * @property string $Id
     */
    protected $Id = null;

    /**
     * @property ArrayOfImageView $Images
     */
    protected $Images = null;

    /**
     * @property ArrayOfOfferDetails $OfferDetails
     */
    protected $OfferDetails = null;

    /**
     * @property string $OfferId
     */
    protected $OfferId = null;

    /**
     * @property OfferType $Type
     */
    protected $Type = null;

    /**
     * @property string $ValidationText
     */
    protected $ValidationText = null;

    /**
     * @param OfferCode|string $Code
     * @return $this
     * @throws InvalidEnumException
     */
    public function setCode($Code)
    {
        if ( ! $Code instanceof OfferCode ) {
            if ( OfferCode::isValid( $Code ) ) 
                $Code = new OfferCode( $Code );
            elseif ( OfferCode::isValidKey( $Code ) ) 
                $Code = new OfferCode( constant( "OfferCode::$Code" ) );
            elseif ( ! $Code instanceof OfferCode )
                throw new InvalidEnumException();
        }
        $this->Code = $Code->getValue();

        return $this;
    }

    /**
     * @return OfferCode
     */
    public function getCode()
    {
        return $this->Code;
    }

    /**
     * @param string $Description
     * @return $this
     */
    public function setDescription($Description)
    {
        $this->Description = $Description;
        return $this;
    }

    /**
     * @return string
     */
    public function getDescription()
    {
        return $this->Description;
    }

    /**
     * @param string $Details
     * @return $this
     */
    public function setDetails($Details)
    {
        $this->Details = $Details;
        return $this;
    }

    /**
     * @return string
     */
    public function getDetails()
    {
        return $this->Details;
    }

    /**
     * @param string $ExpirationDate
     * @return $this
     */
    public function setExpirationDate($ExpirationDate)
    {
        $this->ExpirationDate = $ExpirationDate;
        return $this;
    }

    /**
     * @return string
     */
    public function getExpirationDate()
    {
        return $this->ExpirationDate;
    }

    /**
     * @param string $Id
     * @return $this
     */
    public function setId($Id)
    {
        $this->Id = $Id;
        return $this;
    }

    /**
     * @return string
     */
    public function getId()
    {
        return $this->Id;
    }

    /**
     * @param ArrayOfImageView $Images
     * @return $this
     */
    public function setImages($Images)
    {
        $this->Images = $Images;
        return $this;
    }

    /**
     * @return ArrayOfImageView
     */
    public function getImages()
    {
        return $this->Images;
    }

    /**
     * @param ArrayOfOfferDetails $OfferDetails
     * @return $this
     */
    public function setOfferDetails($OfferDetails)
    {
        $this->OfferDetails = $OfferDetails;
        return $this;
    }

    /**
     * @return ArrayOfOfferDetails
     */
    public function getOfferDetails()
    {
        return $this->OfferDetails;
    }

    /**
     * @param string $OfferId
     * @return $this
     */
    public function setOfferId($OfferId)
    {
        $this->OfferId = $OfferId;
        return $this;
    }

    /**
     * @return string
     */
    public function getOfferId()
    {
        return $this->OfferId;
    }

    /**
     * @param OfferType|string $Type
     * @return $this
     * @throws InvalidEnumException
     */
    public function setType($Type)
    {
        if ( ! $Type instanceof OfferType ) {
            if ( OfferType::isValid( $Type ) ) 
                $Type = new OfferType( $Type );
            elseif ( OfferType::isValidKey( $Type ) ) 
                $Type = new OfferType( constant( "OfferType::$Type" ) );
            elseif ( ! $Type instanceof OfferType )
                throw new InvalidEnumException();
        }
        $this->Type = $Type->getValue();

        return $this;
    }

    /**
     * @return OfferType
     */
    public function getType()
    {
        return $this->Type;
    }

    /**
     * @param string $ValidationText
     * @return $this
     */
    public function setValidationText($ValidationText)
    {
        $this->ValidationText = $ValidationText;
        return $this;
    }

    /**
     * @return string
     */
    public function getValidationText()
    {
        return $this->ValidationText;
    }


}

