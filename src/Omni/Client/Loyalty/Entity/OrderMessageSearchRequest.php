<?php
/**
 * THIS IS AN AUTOGENERATED FILE
 * DO NOT MODIFY
 */


namespace Ls\Omni\Client\Loyalty\Entity;

use \Ls\Omni\Client\Loyalty\Entity\Enum\OrderMessageStatusFilterType;
use \Ls\Omni\Exception\InvalidEnumException;

class OrderMessageSearchRequest
{

    /**
     * @property string $DateFrom
     */
    protected $DateFrom = null;

    /**
     * @property string $DateTo
     */
    protected $DateTo = null;

    /**
     * @property string $Description
     */
    protected $Description = null;

    /**
     * @property OrderMessageStatusFilterType $MessageStatusFilter
     */
    protected $MessageStatusFilter = null;

    /**
     * @property int $PageNumber
     */
    protected $PageNumber = null;

    /**
     * @property int $PageSize
     */
    protected $PageSize = null;

    /**
     * @param string $DateFrom
     * @return $this
     */
    public function setDateFrom($DateFrom)
    {
        $this->DateFrom = $DateFrom;
        return $this;
    }

    /**
     * @return string
     */
    public function getDateFrom()
    {
        return $this->DateFrom;
    }

    /**
     * @param string $DateTo
     * @return $this
     */
    public function setDateTo($DateTo)
    {
        $this->DateTo = $DateTo;
        return $this;
    }

    /**
     * @return string
     */
    public function getDateTo()
    {
        return $this->DateTo;
    }

    /**
     * @param string $Description
     * @return $this
     */
    public function setDescription($Description)
    {
        $this->Description = $Description;
        return $this;
    }

    /**
     * @return string
     */
    public function getDescription()
    {
        return $this->Description;
    }

    /**
     * @param OrderMessageStatusFilterType|string $MessageStatusFilter
     * @return $this
     * @throws InvalidEnumException
     */
    public function setMessageStatusFilter($MessageStatusFilter)
    {
        if ( ! $MessageStatusFilter instanceof OrderMessageStatusFilterType ) {
            if ( OrderMessageStatusFilterType::isValid( $MessageStatusFilter ) ) 
                $MessageStatusFilter = new OrderMessageStatusFilterType( $MessageStatusFilter );
            elseif ( OrderMessageStatusFilterType::isValidKey( $MessageStatusFilter ) ) 
                $MessageStatusFilter = new OrderMessageStatusFilterType( constant( "OrderMessageStatusFilterType::$MessageStatusFilter" ) );
            elseif ( ! $MessageStatusFilter instanceof OrderMessageStatusFilterType )
                throw new InvalidEnumException();
        }
        $this->MessageStatusFilter = $MessageStatusFilter->getValue();

        return $this;
    }

    /**
     * @return OrderMessageStatusFilterType
     */
    public function getMessageStatusFilter()
    {
        return $this->MessageStatusFilter;
    }

    /**
     * @param int $PageNumber
     * @return $this
     */
    public function setPageNumber($PageNumber)
    {
        $this->PageNumber = $PageNumber;
        return $this;
    }

    /**
     * @return int
     */
    public function getPageNumber()
    {
        return $this->PageNumber;
    }

    /**
     * @param int $PageSize
     * @return $this
     */
    public function setPageSize($PageSize)
    {
        $this->PageSize = $PageSize;
        return $this;
    }

    /**
     * @return int
     */
    public function getPageSize()
    {
        return $this->PageSize;
    }


}

